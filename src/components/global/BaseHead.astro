---
import "@/styles/global.css";
import { AstroSeo } from "@astrolib/seo";
---

<AstroSeo
  title="NNeshz Developer"
  description="Neftali Hernández, Full Stack Developer, here you can find my projects, stack and more."
  canonical="https://nneshz.vercel.app/"
  openGraph={{
    url: "https://nneshz.vercel.app/",
    title: "NNeshz Developer",
    description:
      "Neftali Hernández, Full Stack Developer, here you can find my projects, stack and more.",
    images: [
      {
        url: "https://pbs.twimg.com/media/GUU_keMWoAAqu1X?format=jpg&name=large",
        width: 1320,
        height: 1080,
        alt: "NNeshz Developer Portfolio",
        type: "image/jpeg",
      },
      {
        url: "https://pbs.twimg.com/media/GUU_keMWoAAqu1X?format=jpg&name=large",
        width: 1920,
        height: 1080,
        alt: "NNeshz Developer Portfolio",
        type: "image/jpeg",
      },
    ],
    site_name: "NNeshz Developer",
  }}
  twitter={{
    handle: "@nneshz",
    site: "https://x.com/NNeshz",
    cardType: "summary_large_image",
  }}
/>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="author" content="Neftali Hernández" />
<meta
  name="your keywords"
  content="Portfolio, developer, fullstack, frontend, backend"
/>

<link rel="icon" type="image/svg" href="/n-trap.svg" sizes="16x16" />

<script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
 
	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>